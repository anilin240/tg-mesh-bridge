services:
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: tg-mesh-mosquitto
    restart: unless-stopped
    entrypoint: ["sh", "-lc", "/mosquitto/config/entrypoint.sh"]
    ports:
      - "1883:1883"
    environment:
      - MQTT_USER=bridge
      - MQTT_PASS=bridge
    volumes:
      - ./mosquitto:/mosquitto/config:rw
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    networks:
      - backend

  postgres:
    image: postgres:16
    container_name: tg-mesh-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-tgmesh}
      - POSTGRES_USER=${POSTGRES_USER:-tgmesh}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_postgres_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  app:
    image: python:3.11-slim
    container_name: tg-mesh-app
    command: ["sh", "-lc", "pip install --no-cache-dir -r requirements.txt && python -m bot.main"]
    working_dir: /app
    healthcheck:
      test: ["CMD", "python", "-m", "bot.healthcheck"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - ../app:/app
      - ../.env:/app/.env:ro
    env_file:
      - ../.env
    environment:
      - PYTHONPATH=/app/src
      - MQTT_HOST=${MQTT_HOST:-your_mqtt_host_ip}
      - MQTT_PORT=${MQTT_PORT:-1883}
      - MQTT_USER=${MQTT_USER:-bridge}
      - MQTT_PASS=${MQTT_PASS:-bridge}
      - BOT_TOKEN=${BOT_TOKEN}
      - POSTGRES_DB=${POSTGRES_DB:-tgmesh}
      - POSTGRES_USER=${POSTGRES_USER:-tgmesh}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_postgres_password}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    depends_on:
      - mosquitto
      - postgres
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  mosquitto_data:
  mosquitto_log:


