#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ MQTT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ ACL
"""
import paho.mqtt.client as mqtt
import time
import sys

def on_connect(client, userdata, flags, rc):
    print(f"Connected with result code {rc}")
    if rc == 0:
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MQTT –±—Ä–æ–∫–µ—Ä—É")
    elif rc == 5:
        print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {rc}")

def on_message(client, userdata, msg):
    print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {msg.topic} -> {msg.payload.decode()}")

def on_publish(client, userdata, mid):
    print(f"üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {mid}")

def test_mqtt_connection():
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    host = "localhost"
    port = 1883
    username = "your_mqtt_username"
password = "your_mqtt_password"
    
    print(f"üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MQTT –±—Ä–æ–∫–µ—Ä—É {host}:{port}")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
    
    # –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç–∞
    client = mqtt.Client()
    client.username_pw_set(username, password)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º callback'–∏
    client.on_connect = on_connect
    client.on_message = on_message
    client.on_publish = on_publish
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        client.connect(host, port, 60)
        client.loop_start()
        
        # –ñ–¥—ë–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        time.sleep(2)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Ç–æ–ø–∏–∫ –¥–ª—è —á—Ç–µ–Ω–∏—è
        print("\nüìñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ msh/US/2/json/#")
        result = client.subscribe("msh/US/2/json/#")
        if result[0] == 0:
            print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {result[0]}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ —Ç–æ–ø–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏
        print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ msh/US/2/json/mqtt/")
        result = client.publish("msh/US/2/json/mqtt/test", "test message")
        if result[0] == 0:
            print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {result[0]}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π —Ç–æ–ø–∏–∫
        print("\nüö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π —Ç–æ–ø–∏–∫ msh/forbidden/")
        result = client.publish("msh/forbidden/test", "forbidden message")
        if result[0] == 0:
            print("‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π —Ç–æ–ø–∏–∫ –ø—Ä–æ—à–ª–∞ (ACL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)")
        else:
            print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π —Ç–æ–ø–∏–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        time.sleep(3)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        client.loop_stop()
        client.disconnect()
    
    return True

if __name__ == "__main__":
    success = test_mqtt_connection()
    sys.exit(0 if success else 1)
